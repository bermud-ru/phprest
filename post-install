#!/bin/sh

# @category install script
# @author Андрей Новиков <andrey@novikov.be>
# @data 07/12/2015

vendor=vendor/bermud-ru/phprest
echo "Post-install scripting ..."
mkdir -p ./public/css
mkdir -p ./public/js
mkdir -p ./Application/view
mkdir -p ./Application/models
mkdir -p ./setup/nginx
mkdir -p ./setup/SSL
cp -rf ./$vendor/public/401.html ./public/
cp -rf ./$vendor/public/500.html ./public/
cp -rf ./$vendor/public/favicon.ico ./public/
cp -rf ./$vendor/public/index.php ./public/
cp -rf ./$vendor/public/robots.txt ./public/
cp -rf ./$vendor/config.php ./
cp -rf ./$vendor/.gitignore ./
cp -rf ./$vendor/.hgignore ./
cp -n ./$vendor/public/css/* ./public/css/
#cp -rf ./$vendor/public/js/* ./public/js/
for js in ./$vendor/public/js/*
do
 [ -f $js ] && cp -rf $js ./public/js/
done
cp -rf ./$vendor/Application/view/* ./Application/view/
cp -rf ./$vendor/Application/models/* ./Application/models/

project="json.host"
SSL_path=$(pwd)/setup/SSL
echo "
server {
    # access_log /var/log/nginx/$project.access.log combined;
    # error_log /var/log/nginx/$project.error.log warn;

    server_name $project.server www.$project.server;

    listen 80;
    return 302 https://\$server_name\$request_uri;
}

server {
    access_log /var/log/nginx/$project.access.log combined;
    error_log /var/log/nginx/$project.error.log warn;

    server_name $project.server www.$project.server;
    set \$host_path /srv/\$project;
    root \$host_path/public;
    set \$app_bootstrap \"index.php\";
    index \$app_bootstrap;

    charset utf-8;

    listen 443 ssl;
    ssl_certificate $SSL_path/nginx.crt;
    ssl_certificate_key $SSL_path/nginx.key;

    set \$appenv dev;

    location / {
        try_files \$uri \$uri/ /\$app_bootstrap?\$args;
    }

    location ~ ^/(protected|application|framework|themes/\w+/views) {
        deny  all;
    }

    location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)\$ {
        try_files \$uri =404;
    }

    location ~ \.(php|tmpl|wsdl|ws)\$ {
        set \$fsn /\$app_bootstrap;
        fastcgi_param appenv \"dev\";
        fastcgi_index \$app_botstrap;
        fastcgi_split_path_info ^(.+\.php|.+\.tmpl|.+\.wsdl|.+\.ws)(.*)\$;
        #fastcgi_pass  unix:/tmp/php-fpm.sock;
        #fastcgi_pass unix:/var/run/php5-fpm.sock;
        #fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        fastcgi_pass unix:/run/php-fpm/php7.0-fpm.sock;

        if (-f \$document_root\$fastcgi_script_name){
            set \$fsn \$fastcgi_script_name;
        }

        try_files \$uri =404;
        fastcgi_param HTTPS on;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  \$document_root\$fsn;

        fastcgi_param  PATH_INFO        \$fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED  \$document_root\$fsn;
    }

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
" > ./setup/nginx/$project.conf

mkdir -p ./setup/SSL
######## CONFIG ##########
DOMAIN=phprest.ru
SUBDOMAIN=mail.
#Country Name (2 letter code) [XX]:
country=BM
#State or Province Name (full name) []:
state=Bermudian
#Locality Name (eg, city) [Default City]:
locality=Bermudian
#Organization Name (eg, company) [Default Company Ltd]:
organization=None
#Common Name (eg, your name or your server's hostname) []:
organizationalunit=IT
#Email Address []:
email=test@$DOMAIN
##########################

openssl req -nodes -x509 -newkey rsa:2048 -keyout ./setup/SSL/nginx.key -out ./setup/SSL/nginx.crt -days 365 -subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email"

if [ ! -d ./.git ]; then
echo "#!/bin/sh
git init
git add .
git commit -m \"first commit\"
read -p \"<domein>:<user>/<reponame>.git\" repo
if [ ! -z \$repo ]; then
git remote add origin git@\$repo
git push -u origin master
fi
" > ./project.init.sh
sh ./project.init.sh
fi